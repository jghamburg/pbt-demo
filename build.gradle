plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'java'
    id 'jvm-test-suite'
    id 'test-report-aggregation'
    id 'idea'
    id 'com.github.ben-manes.versions' version '0.39.0'
}
ext {
    jqwikVersion = '1.7.0'
    jacksonDatatypeVersion = '2.13.4'
    apacheCommanLang3Version = '3.12.0'
    springBootVersion = '2.7.5'
    springDataMongoVersion = '2.7.5'
    hibernateValidatorVersion = '7.0.1.Final'
    lombokVersion = '1.18.24'
}

group = 'org.jg'
version = '0.0.1-SNAPSHOT'
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springDataMongoVersion}"
    implementation "org.apache.commons:commons-lang3:${apacheCommanLang3Version}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDatatypeVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // aggregate jqwik dependency
    testImplementation "net.jqwik:jqwik:${jqwikVersion}"
}


compileTestJava {
    // To enable argument names in reporting and debugging
    options.compilerArgs += '-parameters'
}
testing {
    suites {
        test {
            useJUnitJupiter()
        }

        integrationTest(JvmTestSuite) {
            dependencies {
                implementation project
            }

            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named('check') {
    dependsOn(testing.suites.integrationTest)
}

